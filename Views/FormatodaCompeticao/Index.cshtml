@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="pt">
<head>
    <meta charset="UTF-8" />
    <title>Formato da Competição</title>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: Arial, sans-serif;
            background-color: #808080;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            position: relative;
        }

        .top-left-logo {
            position: absolute;
            top: 40px;
            left: 50px;
        }

            .top-left-logo img {
                width: 160px;
            }

        .main-container {
            margin-top: 80px;
            margin-bottom: 60px;
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 40px 20px;
            width: 90%;
            max-width: 850px; /* reduzido */
            margin-left: auto;
            margin-right: auto;
        }

        h2 {
            font-size: 34px;
            color: black;
            margin-bottom: 32px;
            text-align: center;
        }

        .fase-selector {
            text-align: center;
            margin-bottom: 30px;
        }

            .fase-selector label {
                font-size: 20px;
                margin-right: 10px;
            }

            .fase-selector input {
                width: 60px;
                font-size: 18px;
                padding: 6px;
                text-align: center;
            }

        input[type="number"]::-webkit-inner-spin-button,
        input[type="number"]::-webkit-outer-spin-button {
            opacity: 1 !important;
        }

        table {
            width: 100%;
            max-width: 800px; /* reduzido */
            border-collapse: collapse;
            margin-top: 20px;
            font-size: 16px;
            background-color: white;
        }

        thead {
            background-color: #ccc;
        }

        th, td {
            padding: 12px 8px;
            border: 1px solid #333;
            text-align: center;
        }

        select {
            font-size: 15px;
            padding: 6px;
            border-radius: 6px;
        }

        .config-button {
            padding: 8px 14px;
            font-size: 15px;
            border: 1px solid black;
            background: white;
            border-radius: 6px;
            cursor: pointer;
            margin-right: 6px;
        }

        .config-icon {
            font-size: 18px;
            cursor: pointer;
        }

        .next-button {
            margin-top: 40px;
            font-size: 20px;
            padding: 14px 42px;
            border: 2px solid black;
            background: white;
            border-radius: 10px;
            cursor: pointer;
            box-shadow: 3px 3px 6px rgba(0,0,0,0.2);
        }

            .next-button:hover {
                background-color: #dcdcdc;
            }

        .back-button {
            position: absolute;
            right: 40px;
            bottom: 40px;
            padding: 12px 24px;
            font-size: 18px;
            border: 2px solid #000;
            background: white;
            border-radius: 8px;
            cursor: pointer;
            text-decoration: none;
            color: black;
        }

            .back-button:hover {
                background-color: #dcdcdc;
            }

        media (max-width: 768px) {
            h2

        {
            font-size: 26px;
        }

        .fase-selector label {
            font-size: 16px;
        }

        .next-button {
            font-size: 18px;
            padding: 12px 30px;
        }

        table {
            font-size: 14px;
        }

        }
    </style>
</head>
<body>

    <!-- Logotipo -->
    <div class="top-left-logo">
        <a href="/">
            <img src="img/logotipo.png" alt="Logotipo" />
        </a>
    </div>

    <!-- Conteúdo -->
    <div class="main-container">
        <h2>Formato da Competição</h2>

        <div class="fase-selector">
            <label for="numFases">Número de Fases</label>
            <input type="number" id="numFases" name="numFases" min="1" max="5" value="@ViewBag.NumFases ?? 2" onchange="updateTableRows()" />
        </div>

        <table id="fasesTable">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Nome da Fase</th>
                    <th>Formato da Fase</th>
                    <th>Configuração</th>
                </tr>
            </thead>
            <tbody id="fasesTableBody">
            </tbody>
        </table>

        <button class="next-button" id="nextButton">Seguinte</button>
    </div>

    <!-- Botão Voltar -->
    <a href="/CriarCompeticao" class="back-button">&lt;Voltar</a>

    <script>
        // Recebe do Razor (TempData)
        const competicaoId = '@ViewBag.CompeticaoId';
        let formatosSelecionados = {};
        try {
            formatosSelecionados = @Html.Raw(ViewBag.FormatosSelecionados ?? "{}");
        } catch (e) { formatosSelecionados = {}; }

        function updateFormat(formato, faseNum) {
            formatosSelecionados[faseNum] = formato;
            // Salva no servidor via AJAX, agora com competicaoId
            fetch(`/FormatodaCompeticao/SalvarFormatos?competicaoId=${competicaoId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(formatosSelecionados)
            });
        }

        function configurarFase(faseNum) {
            const formato = formatosSelecionados[faseNum];
            if (!formato) {
                alert('Por favor, selecione um formato para a fase antes de configurar.');
                return;
            }
            window.location.href = `@Url.Action("Index", "CriteriosdePontuacao")?faseNumero=${faseNum}&formato=${formato}&competicaoId=${competicaoId}`;
        }

        function updateTableRows() {
            const numFases = parseInt(document.getElementById('numFases').value);
            // Salva o número de fases no servidor via AJAX
            fetch(`/FormatodaCompeticao/SalvarNumFases?competicaoId=${competicaoId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(numFases)
            });
            const tableBody = document.getElementById('fasesTableBody');
            tableBody.innerHTML = '';

            for (let i = 1; i <= numFases; i++) {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${i}</td>
                    <td>Fase ${i}</td>
                    <td>
                        <select onchange="updateFormat(this.value, ${i})" id="select-fase-${i}">
                            <option disabled${!formatosSelecionados[i] ? ' selected' : ''}>Formato</option>
                            <option value="round-robin">Round Robin (Todos contra todos)</option>
                            <option value="ave">Sistema AVE</option>
                            <option value="eliminacao">Taça</option>
                            <option value="campeonato">Campeonato (Liga)</option>
                            <option value="duplo-ko">Duplo KO</option>
                        </select>
                    </td>
                    <td>
                        <button class="config-button" onclick="configurarFase(${i})">Configurar</button>
                        <span class="config-icon" onclick="configurarFase(${i})">⚙️</span>
                    </td>
                `;
                tableBody.appendChild(row);
            }

            // Após criar as linhas, definir o valor dos selects conforme formatosSelecionados
            for (let i = 1; i <= numFases; i++) {
                if (formatosSelecionados[i]) {
                    const select = document.getElementById(`select-fase-${i}`);
                    if (select) select.value = formatosSelecionados[i];
                }
            }
        }

        // Initialize table with default value e handler do botão Seguinte
        document.addEventListener('DOMContentLoaded', function() {
            // Se existir valor vindo do servidor, usa-o
            const numFasesInput = document.getElementById('numFases');
            if (@ViewBag.NumFases != null) {
                numFasesInput.value = @ViewBag.NumFases;
            }
            updateTableRows();

            // Handler do botão Seguinte
            const nextButton = document.getElementById('nextButton');
            nextButton.addEventListener('click', function (e) {
                const numFases = parseInt(document.getElementById('numFases').value);
                let fasesConfiguradas = 0;
                for (let i = 1; i <= numFases; i++) {
                    if (formatosSelecionados[i]) fasesConfiguradas++;
                }
                if (fasesConfiguradas < numFases) {
                    const continuar = confirm(`Só configurou ${fasesConfiguradas} de ${numFases} fases. Deseja continuar apenas com as fases configuradas? (OK para continuar, Cancelar para configurar as restantes)`);
                    if (!continuar) {
                        // Fica na página para configurar as restantes
                        return;
                    }
                }
                // Avança para a próxima página
                window.location.href = '@Url.Action("Index", "ListadeJogadores")';
            });
        });
    </script>
</body>
</html>
