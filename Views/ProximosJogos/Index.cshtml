﻿﻿@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="pt">
<head>
    <meta charset="UTF-8" />
    <title>Jogos Agendados - Bilhar</title>
    <style>
        * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
        }

        html, body {
        height: 100%;
        overflow: hidden;
        }

        body {
        font-family: Arial, sans-serif;
        background-color: #808080;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        position: relative;
        }

        .top-left-logo {
        position: absolute;
        top: 40px;
        left: 50px;
        }

        .top-left-logo img {
        width: 160px;
        }

        .main-container {
        margin-top: 80px;
        margin-bottom: 60px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        flex-grow: 1;
        padding: 60px 20px;
        }

        .box {
        background-color: transparent;
        padding: 40px;
        border-radius: 12px;
        width: 100%;
        max-width: 820px;
        }

        h2 {
        font-size: 42px;
        margin-bottom: 40px;
        color: black;
        text-align: center;
        }

        .button-top-right {
        display: flex;
        justify-content: flex-end;
        margin-bottom: 10px;
        }

        .btn {
        padding: 10px 22px;
        background-color: white;
        border: 2px solid black;
        border-radius: 10px;
        font-weight: bold;
        cursor: pointer;
        font-size: 18px;
        }

        .btn:hover {
        background-color: #dcdcdc;
        }

        .table-wrapper {
        max-height: 320px;
        overflow-y: auto;
        border: 1px solid #333;
        }

        table {
        width: 100%;
        border-collapse: collapse;
        }

        thead th {
        position: sticky; /* Mantém o cabeçalho fixo no topo */
        top: 0;
        background-color: #ddd;
        z-index: 1;
        }

        th, td {
        border: 1px solid #333;
        background-color: white;
        padding: 16px;
        font-size: 18px;
        text-align: center;
        }

        tr:nth-child(even) td {
        background-color: #f2f2f2; /* Alterna a cor das linhas */
        }

        .back-button {
        position: absolute;
        right: 40px;
        bottom: 40px;
        padding: 12px 24px;
        font-size: 18px;
        border: 2px solid #000;
        background: white;
        border-radius: 8px;
        cursor: pointer;
        text-decoration: none;
        color: black;
        }

        .back-button:hover {
        background-color: #dcdcdc;
        }
    </style>
</head>
<body>

    <!-- Logotipo -->
    <div class="top-left-logo">
        <a href="/home">
            <img src="img/logotipo.png" alt="Logotipo" />
        </a>
    </div>

    <!-- Conteúdo principal -->
    <div class="main-container">
        <div class="box">
            <h2>Jogos Agendados (Equipas e Individuais)</h2>

            <!-- Botão no topo à direita -->
            @*             <div class="button-top-right">
                @if (User.Identity.IsAuthenticated)
                {
                    <button type="button" class="btn" onclick="window.location.href='/AgendarJogos'">
                        Agendar Jogos
                    </button>
                }
            </div> *@


            <!-- Tabela com scroll -->
            <div class="table-wrapper">
                <table id="tabelaJogos">
                    <thead>
                        <tr>
                            <th>Partidas (Equipas/Jogadores)</th>
                            <th>Data</th>
                            <th>Horário</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Jogos serão renderizados por JS -->
                    </tbody>
                </table>
            </div>
            @if (User.Identity.IsAuthenticated)
            {
                <div style="text-align:center; margin-top:40px;">
                    <button class="btn" type="button" id="btnGuardarTodos">Guardar</button>
                </div>
            }

        </div>
    </div>

    <!-- Botão Voltar absoluto -->
    <a href="/Menu" class="back-button">&lt;Voltar</a>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const nomeCompeticao = localStorage.getItem('competicaoSelecionada');
        const tabela = document.getElementById('tabelaJogos').getElementsByTagName('tbody')[0];
        let agendamentos = [];
        if (nomeCompeticao) {
            agendamentos = JSON.parse(localStorage.getItem('agendamentos_' + nomeCompeticao)) || [];
        }

        function renderJogos() {
            tabela.innerHTML = '';
            if (agendamentos.length === 0) {
                const row = document.createElement('tr');
                row.innerHTML = '<td colspan="@((User.Identity.IsAuthenticated) ? 4 : 3)">Nenhum jogo agendado.</td>';
                tabela.appendChild(row);
                return;
            }
            agendamentos.forEach(function(jogo, idx) {
                const row = document.createElement('tr');
                var html = '';
                // Verificar se é um emparelhamento de clubes ou jogadores
                let jogador1Nome, jogador2Nome;
                
                if (jogo.isClube) {
                    // É um emparelhamento de clubes
                    jogador1Nome = jogo.jogador1.nome;
                    jogador2Nome = jogo.jogador2.nome;
                    html += '<td><strong>Equipa:</strong> ' + (jogador1Nome || '') + ' vs ' + (jogador2Nome || '') + '</td>';
                } else {
                    // É um emparelhamento de jogadores individual
                    jogador1Nome = typeof jogo.jogador1 === 'object' ? jogo.jogador1.nome : jogo.jogador1;
                    jogador2Nome = typeof jogo.jogador2 === 'object' ? jogo.jogador2.nome : jogo.jogador2;
                    html += '<td>' + (jogador1Nome || '') + ' vs ' + (jogador2Nome || '') + '</td>';
                }
                // Bloco de edição só para autenticados
                        if (@(User.Identity.IsAuthenticated.ToString().ToLower())) {
            html += '<td><input type="date" value="' + (jogo.data ? jogo.data : '') + '" class="data-input" data-idx="' + idx + '"></td>';
            html += '<td><input type="time" value="' + (jogo.hora ? jogo.hora : '') + '" class="hora-input" data-idx="' + idx + '"></td>';
        } else {
            html += '<td>' + (jogo.data ? jogo.data : '') + '</td>';
            html += '<td>' + (jogo.hora ? jogo.hora : '') + '</td>';
        }

                row.innerHTML = html;
                tabela.appendChild(row);
            });
        }

        window.guardarAlteracao = function(idx) {
            const dataInput = document.querySelector('input.data-input[data-idx="' + idx + '"]');
            const horaInput = document.querySelector('input.hora-input[data-idx="' + idx + '"]');
            agendamentos[idx].data = dataInput.value;
            agendamentos[idx].hora = horaInput.value;
            // Garantir que a propriedade isClube seja preservada
            if (agendamentos[idx].isClube === undefined) {
                agendamentos[idx].isClube = false;
            }
            if (nomeCompeticao) {
                localStorage.setItem('agendamentos_' + nomeCompeticao, JSON.stringify(agendamentos));
            }
            renderJogos();
        }

        // Guardar todos os jogos de uma vez
        var btnGuardarTodos = document.getElementById('btnGuardarTodos');
        if (btnGuardarTodos) {
            btnGuardarTodos.addEventListener('click', function() {
                document.querySelectorAll('input.data-input').forEach(function(input) {
                    var idx = input.getAttribute('data-idx');
                    agendamentos[idx].data = input.value;
                    // Garantir que a propriedade isClube seja preservada
                    if (agendamentos[idx].isClube === undefined) {
                        agendamentos[idx].isClube = false;
                    }
                });
                document.querySelectorAll('input.hora-input').forEach(function(input) {
                    var idx = input.getAttribute('data-idx');
                    agendamentos[idx].hora = input.value;
                });
                if (nomeCompeticao) {
                    localStorage.setItem('agendamentos_' + nomeCompeticao, JSON.stringify(agendamentos));
                }
                renderJogos();
            });
        }

        renderJogos();
    });
</script>

</body>
</html>
