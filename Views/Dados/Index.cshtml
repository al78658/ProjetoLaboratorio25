﻿﻿@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="pt">
<head>
    <meta charset="UTF-8" />
    <title>Perfil de Jogador</title>
    <style>
        * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
        }

        body {
        font-family: Arial, sans-serif;
        background-color: #808080;
        min-height: 100vh;
        position: relative;
        }

        .top-left-logo {
        position: absolute;
        top: 40px;
        left: 50px;
        }

        .top-left-logo img {
        width: 160px;
        }

        .main-wrapper {
        display: flex;
        justify-content: center;
        align-items: flex-start;
        padding-top: 160px;
        padding-left: 20px;
        padding-right: 20px;
        gap: 60px;
        max-width: 1000px;
        margin: 0 auto;
        }

        .left-panel {
        flex: 1;
        max-width: 450px;
        margin-top: 60px;
        display: flex;
        flex-direction: column;
        }

        .player-name {
        font-size: 42px;
        color: #1e1e1e;
        font-weight: bold;
        margin-bottom: 40px;
        margin-top: -80px;
        }

        .right-panel {
        flex: 1;
        display: flex;
        flex-direction: column;
        gap: 20px;
        max-width: 500px;
        }

        .section {
        background: #f0f0f0;
        border: 2px solid #333;
        padding: 20px;
        border-radius: 8px;
        min-height: 140px;
        font-size: 16px;
        }

        .section h2 {
        font-size: 22px;
        margin-bottom: 10px;
        }

        .info-table {
        width: 100%;
        border-collapse: collapse;
        }

        .info-table td {
        border: 1px solid #444;
        padding: 8px 12px;
        font-size: 16px;
        }

        .bold {
        font-weight: bold;
        }

        .button-wrapper {
        position: absolute;
        right: 30px;
        bottom: 30px;
        display: flex;
        flex-direction: row;
        gap: 12px;
        }

        .report-button {
        padding: 10px 20px;
        font-size: 16px;
        background: white;
        border: 2px solid black;
        border-radius: 8px;
        cursor: pointer;
        }

        .report-button:hover {
        background-color: #dcdcdc;
        }

        .back-button {
        padding: 10px 20px;
        font-size: 16px;
        border: 2px solid #000;
        background: white;
        border-radius: 8px;
        cursor: pointer;
        text-decoration: none;
        color: black;
        }

        .back-button:hover {
        background-color: #dcdcdc;
        }

        media (max-width: 900px) {
        .main-wrapper

        {
        flex-direction: column;
        align-items: center;
        gap: 40px;
        }

        .button-wrapper {
        flex-direction: column;
        align-items: center;
        right: 50%;
        transform: translateX(50%);
        }

        }
    </style>
</head>
<body>

    <!-- Logotipo -->
    <div class="top-left-logo">
        <a href="/Home">
            <img src="img/logotipo.png" alt="Logotipo" />
        </a>
    </div>


    <!-- Layout Principal -->
    <div class="main-wrapper">

        <!-- Coluna Esquerda -->
        <div class="left-panel">
            <div class="player-name" id="nomeJogador">Carregando...</div>
            <div class="section">
                <h2>Informação Pessoal</h2>
                <table class="info-table" id="infoTable">
                    <tr><td class="bold">Nome</td><td id="infoNome">-</td></tr>
                    <tr><td class="bold">Código</td><td id="infoCodigo">-</td></tr>
                    <tr><td class="bold">Data de Nascimento</td><td id="infoDataNascimento">-</td></tr>
                    <tr><td class="bold">Categoria</td><td id="infoCategoria">-</td></tr>
                    <tr><td class="bold">Clube</td><td id="infoClube">-</td></tr>
                </table>
            </div>
        </div>

        <!-- Coluna Direita -->
        <div class="right-panel">
            <div class="section">
                <h2>Jogos Agendados (Individuais e da Equipa)</h2>
                <div id="jogosAgendados">
                    <p>Nenhum jogo agendado.</p>
                </div>
            </div>

            <div class="section">
                <h2>Informações Adicionais</h2>
                <p>Jogador importado do Excel.</p>
                <p>Os dados completos estão disponíveis no sistema.</p>
                <p id="infoEquipa" style="margin-top: 10px; font-weight: bold;"></p>
            </div>

            <div class="section">
                <h2>Competições</h2>
                <div id="competicoes">
                    <p>Nenhuma competição registrada.</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Botões -->
    <div class="button-wrapper">
        @if (User.Identity.IsAuthenticated)
        {
            <button class="report-button" onclick="window.location.href='/CriarRelatorio'">
                Criar Relatório
        </button>     
        }
        <a href="/" class="back-button">&lt;Voltar</a>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Obter jogador do localStorage
            const jogadorStr = localStorage.getItem('jogadorSelecionado');
            if (!jogadorStr) {
                // Se não houver jogador selecionado, exibir mensagem
                document.getElementById('nomeJogador').textContent = 'Jogador não encontrado';
                return;
            }
            
            const jogador = JSON.parse(jogadorStr);
            
            // Preencher informações do jogador
            document.getElementById('nomeJogador').textContent = jogador.nome;
            document.getElementById('infoNome').textContent = jogador.nome;
            document.getElementById('infoCodigo').textContent = jogador.codigo;
            document.getElementById('infoDataNascimento').textContent = jogador.dataNascimento;
            document.getElementById('infoCategoria').textContent = jogador.categoria;
            document.getElementById('infoClube').textContent = jogador.clube;
            
            // Destacar informação do clube
            if (jogador.clube && jogador.clube.trim() !== '') {
                document.getElementById('infoEquipa').textContent = `Membro da equipa: ${jogador.clube}`;
            } else {
                document.getElementById('infoEquipa').textContent = 'Jogador sem equipa associada';
            }
            
            // Buscar jogos agendados
            const jogosAgendadosDiv = document.getElementById('jogosAgendados');
            const competicoesDiv = document.getElementById('competicoes');
            
            // Verificar todas as competições
            const todasCompeticoes = JSON.parse(localStorage.getItem('todasCompeticoes') || '[]');
            if (todasCompeticoes.length === 0) {
                return;
            }
            
            let jogosEncontrados = false;
            let competicoesEncontradas = false;
            
            todasCompeticoes.forEach(comp => {
                const nomeCompeticao = comp.nome;
                
                // Verificar se o jogador está nesta competição
                const jogadoresComp = JSON.parse(localStorage.getItem(`jogadores_${nomeCompeticao}`) || '[]');
                const jogadorNaCompeticao = jogadoresComp.some(j => 
                    (typeof j === 'object' && j.nome === jogador.nome) || 
                    (typeof j === 'string' && j === jogador.nome)
                );
                
                if (jogadorNaCompeticao) {
                    competicoesEncontradas = true;
                    
                    // Adicionar à lista de competições
                    if (competicoesDiv.innerHTML === '<p>Nenhuma competição registrada.</p>') {
                        competicoesDiv.innerHTML = '';
                    }
                    
                    competicoesDiv.innerHTML += `<p>Participante da competição: ${nomeCompeticao}</p>`;
                    
                    // Verificar jogos agendados
                    const agendamentos = JSON.parse(localStorage.getItem(`agendamentos_${nomeCompeticao}`) || '[]');
                    
                    agendamentos.forEach(ag => {
                        // Verificar se é um emparelhamento de clubes ou jogadores individuais
                        if (ag.isClube) {
                            // É um emparelhamento de clubes
                            const clube1Nome = ag.jogador1.nome;
                            const clube2Nome = ag.jogador2.nome;
                            
                            // Verificar se o clube do jogador está envolvido no jogo
                            if (jogador.clube === clube1Nome || jogador.clube === clube2Nome) {
                                jogosEncontrados = true;
                                
                                if (jogosAgendadosDiv.innerHTML === '<p>Nenhum jogo agendado.</p>') {
                                    jogosAgendadosDiv.innerHTML = '';
                                }
                                
                                jogosAgendadosDiv.innerHTML += `
                                    <p>
                                        <strong>${clube1Nome}</strong> vs <strong>${clube2Nome}</strong><br>
                                        <small>Data: ${ag.data} às ${ag.hora}</small>
                                        <small>(Jogo do seu clube)</small>
                                    </p>
                                `;
                            }
                        } else {
                            // É um emparelhamento de jogadores individuais
                            const jogador1Nome = typeof ag.jogador1 === 'object' ? ag.jogador1.nome : ag.jogador1;
                            const jogador2Nome = typeof ag.jogador2 === 'object' ? ag.jogador2.nome : ag.jogador2;
                            
                            if (jogador1Nome === jogador.nome || jogador2Nome === jogador.nome) {
                                jogosEncontrados = true;
                                
                                if (jogosAgendadosDiv.innerHTML === '<p>Nenhum jogo agendado.</p>') {
                                    jogosAgendadosDiv.innerHTML = '';
                                }
                                
                                jogosAgendadosDiv.innerHTML += `
                                    <p>
                                        <strong>${jogador1Nome}</strong> vs <strong>${jogador2Nome}</strong><br>
                                        <small>Data: ${ag.data} às ${ag.hora}</small>
                                        <small>(Jogo individual)</small>
                                    </p>
                                `;
                            }
                        }
                    });
                }
            });
            
            if (!jogosEncontrados) {
                jogosAgendadosDiv.innerHTML = '<p>Nenhum jogo agendado.</p>';
            }
            
            if (!competicoesEncontradas) {
                competicoesDiv.innerHTML = '<p>Nenhuma competição registrada.</p>';
            }
        });
    </script>
</body>
</html>
