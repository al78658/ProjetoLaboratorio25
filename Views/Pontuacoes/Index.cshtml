﻿﻿@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="pt">
<head>
    <meta charset="UTF-8" />
    <title>Gestão de Resultados</title>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: Arial, sans-serif;
            background-color: #808080;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 40px 20px;
            position: relative;
        }

        .top-left-logo {
            position: absolute;
            top: 40px;
            left: 50px;
        }

            .top-left-logo img {
                width: 160px;
            }

        .content-wrapper {
            display: flex;
            flex-direction: column;
            align-items: center;
            width: 100%;
            max-width: 1000px;
        }

        h2 {
            font-size: 32px;
            color: black;
            margin-bottom: 30px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            background: white;
            margin-bottom: 30px;
        }

        th, td {
            padding: 14px 12px;
            border: 1px solid #888;
            text-align: center;
            font-size: 18px;
        }

        th {
            background-color: #ccc;
        }

        tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        .victory-button {
            padding: 6px 10px;
            background-color: white;
            border: 2px solid #000;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            margin: 2px;
        }

            .victory-button:hover {
                background-color: #e0e0e0;
            }

        .arrow-button {
            display: inline-block;
            width: 24px;
            height: 24px;
            background-color: green;
            color: white;
            font-weight: bold;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            line-height: 24px;
            margin: 0 4px;
        }

        .comment-section {
            width: 100%;
        }

            .comment-section label {
                font-size: 20px;
                color: black;
            }

        .comment-box {
            width: 100%;
            margin-top: 10px;
            padding: 12px;
            font-size: 16px;
            border-radius: 8px;
            border: 1px solid #333;
        }

        .confirm-button {
            display: block;
            margin: 30px auto 0 auto;
            font-size: 18px;
            padding: 12px 30px;
            border: 2px solid #000;
            background: white;
            border-radius: 8px;
            cursor: pointer;
        }

            .confirm-button:hover {
                background-color: #dcdcdc;
            }

        .back-button {
            position: absolute;
            right: 40px;
            bottom: 40px;
            padding: 12px 24px;
            font-size: 18px;
            border: 2px solid #000;
            background: white;
            border-radius: 8px;
            cursor: pointer;
            text-decoration: none;
            color: black;
        }

            .back-button:hover {
                background-color: #dcdcdc;
            }

        .pontuacao-flex {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 5px;
        }
    </style>
</head>
<body>

    <!-- Logotipo -->
    <div class="top-left-logo">
        <a href="/home">
            <img src="img/logotipo.png" alt="Logotipo" />
        </a>
    </div>

    <!-- Conteúdo Centralizado -->
    <div class="content-wrapper">
        <h2>Gestão de Resultados</h2>
        <div style="margin-bottom: 24px; text-align: right;">
            <!-- Campo de data removido -->
        </div>
        <table id="tabelaPontuacoes">
            <thead>
                <tr>
                    <th>Partidas</th>
                    <th>Pontuação</th>
                    <th>Vitória</th>
                    <th>Motivo</th>
                </tr>
            </thead>
            <tbody>
                <!-- Jogos renderizados por JS -->
            </tbody>
        </table>
        <button class="confirm-button" id="btnRegistar">Registar</button>
    </div>
    <a href="/Menu" class="back-button">&lt;Voltar</a>
    <!-- ...todo o código até à função renderJogos permanece igual -->

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const nomeCompeticao = localStorage.getItem('competicaoSelecionada');
            const tabela = document.getElementById('tabelaPontuacoes').getElementsByTagName('tbody')[0];
            const btnRegistar = document.getElementById('btnRegistar');
            let agendamentos = [];
            let resultados = [];

            let dataSelecionada = localStorage.getItem('dataSelecionadaMenu');
            if (!dataSelecionada) {
                dataSelecionada = new Date().toISOString().split('T')[0];
            }
            localStorage.removeItem('dataSelecionadaMenu');

            function carregarAgendamentos() {
                if (nomeCompeticao) {
                    agendamentos = JSON.parse(localStorage.getItem('agendamentos_' + nomeCompeticao)) || [];
                } else {
                    agendamentos = [];
                }
            }

            function carregarResultados() {
                if (nomeCompeticao && dataSelecionada) {
                    resultados = JSON.parse(localStorage.getItem('resultados_' + nomeCompeticao + '_' + dataSelecionada)) || [];
                } else {
                    resultados = [];
                }
            }

            function renderJogos() {
                tabela.innerHTML = '';
                const jogosDoDia = agendamentos.filter(j => j.data === dataSelecionada);
                if (jogosDoDia.length === 0) {
                    const row = document.createElement('tr');
                    row.innerHTML = '<td colspan="4">Nenhum jogo agendado para este dia.</td>';
                    tabela.appendChild(row);
                    return;
                }

                jogosDoDia.forEach((jogo, idx) => {
                    const resultado = resultados[idx] || {};
                    const pontuacao = resultado.pontuacao || '0-0';
                    const vencedor = resultado.vencedor || '';
                    const motivo = resultado.motivo || '';

                    // Verificar se é um emparelhamento de clubes ou jogadores
                    let jogador1Nome, jogador2Nome;
                    
                    if (jogo.isClube) {
                        // É um emparelhamento de clubes
                        jogador1Nome = jogo.jogador1.nome;
                        jogador2Nome = jogo.jogador2.nome;
                    } else {
                        // É um emparelhamento de jogadores individual
                        jogador1Nome = typeof jogo.jogador1 === 'object' ? jogo.jogador1.nome : jogo.jogador1;
                        jogador2Nome = typeof jogo.jogador2 === 'object' ? jogo.jogador2.nome : jogo.jogador2;
                    }
                    
                    const v1Active = vencedor === jogador1Nome ? 'background:#b6b6b6;color:#111;' : '';
                    const v2Active = vencedor === jogador2Nome ? 'background:#b6b6b6;color:#111;' : '';

                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${jogador1Nome} vs ${jogador2Nome}</td>
                        <td>
                            <div class="pontuacao-flex">
                                <button class="arrow-button" onclick="incrementScore(${idx},1)">↑</button>
                                <span id="score-${idx}">${pontuacao}</span>
                                <button class="arrow-button" onclick="incrementScore(${idx},2)">↑</button>
                            </div>
                        </td>
                        <td>
                            <button class="victory-button" style="${v1Active}" onclick="darVitoria(${idx},'${jogador1Nome}')">Dar Vitória ${jogador1Nome}</button>
                            <button class="victory-button" style="${v2Active}" onclick="darVitoria(${idx},'${jogador2Nome}')">Dar Vitória ${jogador2Nome}</button>
                        </td>
                        <td><input type="text" class="motivo-input" data-idx="${idx}" value="${motivo}" placeholder="Motivo (obrigatório se vitória)" style="width:140px;" /></td>
                    `;
                    tabela.appendChild(row);
                });
            }

            window.incrementScore = function(idx, player) {
                const scoreSpan = document.getElementById('score-' + idx);
                let scores = scoreSpan.textContent.split('-').map(Number);
                if (scores.length !== 2) scores = [0, 0];
                if (scores[player - 1] < 99) scores[player - 1]++;
                scoreSpan.textContent = scores.join('-');
            }

                   window.darVitoria = function(idx, vencedor) {
            // Atualiza todos os motivos e pontuações atuais antes de redesenhar
            const jogosDoDia = agendamentos.filter(j => j.data === dataSelecionada);
            jogosDoDia.forEach((jogo, i) => {
                const scoreSpan = document.getElementById('score-' + i);
                const motivoInput = document.querySelector(`.motivo-input[data-idx='${i}']`);
                resultados[i] = resultados[i] || {};
                if (scoreSpan) resultados[i].pontuacao = scoreSpan.textContent;
                if (motivoInput) resultados[i].motivo = motivoInput.value.trim();
            });

            resultados[idx].vencedor = vencedor;

            renderJogos(); // redesenha sem perder dados temporários
        }


            btnRegistar.addEventListener('click', function () {
                const jogosDoDia = agendamentos.filter(j => j.data === dataSelecionada);
                let erro = false;
                const novosResultados = jogosDoDia.map((jogo, idx) => {
                    const score = document.getElementById('score-' + idx).textContent;
                    const vencedor = (resultados[idx] && resultados[idx].vencedor) || '';
                    const motivo = document.querySelector(`.motivo-input[data-idx='${idx}']`).value.trim();

                    // Verificar se é um emparelhamento de clubes ou jogadores
                    let jogador1Nome, jogador2Nome;
                    
                    if (jogo.isClube) {
                        // É um emparelhamento de clubes
                        jogador1Nome = jogo.jogador1.nome;
                        jogador2Nome = jogo.jogador2.nome;
                    } else {
                        // É um emparelhamento de jogadores individual
                        jogador1Nome = typeof jogo.jogador1 === 'object' ? jogo.jogador1.nome : jogo.jogador1;
                        jogador2Nome = typeof jogo.jogador2 === 'object' ? jogo.jogador2.nome : jogo.jogador2;
                    }
                    
                    if (vencedor && motivo.length < 2) {
                        alert('Para registar vitória é obrigatório um motivo para o jogo: ' + jogador1Nome + ' vs ' + jogador2Nome);
                        erro = true;
                    }

                    // Preservar a estrutura original dos jogadores
                    return {
                        jogador1: jogo.jogador1,
                        jogador2: jogo.jogador2,
                        pontuacao: score,
                        vencedor,
                        motivo,
                        isClube: jogo.isClube,
                        data: jogo.data,
                        hora: jogo.hora
                    };
                });

                if (erro) return;

                if (nomeCompeticao && dataSelecionada) {
                    localStorage.setItem('resultados_' + nomeCompeticao + '_' + dataSelecionada, JSON.stringify(novosResultados));
                }

                window.location.href = '/Menu';
            });

            carregarAgendamentos();
            carregarResultados();
            renderJogos();
        });
    </script>


</body>
</html>
