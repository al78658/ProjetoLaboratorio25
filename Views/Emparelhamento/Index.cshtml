﻿@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="pt">
<head>
    <meta charset="UTF-8" />
    <title>Emparelhamento</title>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: Arial, sans-serif;
            background-color: #808080;
            min-height: 100vh;
            position: relative;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
        }

        .top-left-logo {
            position: absolute;
            top: 40px;
            left: 50px;
        }

            .top-left-logo img {
                width: 160px;
            }

        h1 {
            font-size: 36px;
            color: black;
            margin-bottom: 10px;
            text-align: center;
        }

        #nomeCompeticao {
            font-size: 22px;
            color: white;
            margin-bottom: 30px;
            text-align: center;
        }

        .table-wrapper {
            width: 100%;
            display: flex;
            justify-content: center;
        }

        table {
            border-collapse: collapse;
            background-color: white;
            width: 60%;
            min-width: 600px;
        }

        th, td {
            border: 1px solid black;
            padding: 14px;
            text-align: center;
            font-size: 18px;
        }

        th {
            background-color: #e0e0e0;
            font-weight: bold;
        }

        input[type="date"],
        input[type="time"] {
            padding: 6px;
            font-size: 16px;
            width: 90%;
        }

        .button-container {
            margin-top: 30px;
            text-align: center;
        }

        .action-button {
            padding: 12px 28px;
            font-size: 18px;
            border: 2px solid black;
            background: white;
            border-radius: 8px;
            cursor: pointer;
            margin: 0 10px;
        }

            .action-button:hover {
                background-color: #dcdcdc;
            }

        .back-button {
            position: absolute;
            right: 30px;
            bottom: 30px;
            padding: 10px 20px;
            font-size: 18px;
            border: 2px solid #000;
            background: white;
            border-radius: 8px;
            cursor: pointer;
            text-decoration: none;
            color: black;
        }

            .back-button:hover {
                background-color: #dcdcdc;
            }

        media (max-width: 700px) {
            table

        {
            width: 90%;
            min-width: unset;
        }

        .action-button {
            width: 100%;
        }

        h1 {
            font-size: 28px;
        }

        }
    </style>
</head>
<body>
    <div class="top-left-logo">
        <a href="/Home">
            <img src="img/logotipo.png" alt="Logotipo" />
        </a>
    </div>

    <!-- Navegação de Criação de Competição -->
    @await Html.PartialAsync("_CriacaoCompeticaoNav", "Emparelhamento")

    <h1>Emparelhamento</h1>
    <h2 id="nomeCompeticao"></h2>

    <div class="table-wrapper">
        <table>
            <thead>
                <tr>
                    <th>Equipa 1</th>
                    <th>Data e Horário</th>
                    <th>Equipa 2</th>
                </tr>
            </thead>
            <tbody id="pairsTableBody"></tbody>
        </table>
    </div>

    <div class="button-container">
        <button class="action-button" id="saveButton">Guardar</button>
        <button class="action-button" id="menuButton">Menu</button>
    </div>

    <a href="/ListadeJogadores" class="back-button">&lt;Voltar</a>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const pairsTableBody = document.getElementById('pairsTableBody');
            const saveButton = document.getElementById('saveButton');
            const menuButton = document.getElementById('menuButton');

            // Fetch clubs dynamically from the backend
            const clubes = @Html.Raw(Json.Serialize(ViewBag.Clubes));

            // Debugging: Display the list of clubs in the console
            console.log('Clubes recebidos:', clubes);

            // Render clubs in the table
            renderClubs(clubes);

            function renderClubs(clubes) {
                pairsTableBody.innerHTML = '';
                for (let i = 0; i < clubes.length; i += 2) {
                    const clube1 = clubes[i] || 'N/A';
                    const clube2 = clubes[i + 1] || 'N/A';
                    const tr = document.createElement('tr');
                    tr.innerHTML = `
                        <td>${clube1}</td>
                        <td>
                            <input type="date" class="date-input" />
                            <input type="time" class="time-input" />
                        </td>
                        <td>${clube2}</td>
                    `;
                    pairsTableBody.appendChild(tr);
                }
            }

            // Save pairings to the backend
            saveButton.addEventListener('click', async function () {
                const rows = pairsTableBody.querySelectorAll('tr');
                const emparelhamentos = [];
                rows.forEach(row => {
                    const clube1 = row.children[0].textContent.trim();
                    const clube2 = row.children[2].textContent.trim();
                    const date = row.querySelector('.date-input').value;
                    const time = row.querySelector('.time-input').value;
                    if (date && time) {
                        emparelhamentos.push({
                            Clube1: clube1,
                            Clube2: clube2,
                            DataJogo: date,
                            HoraJogo: time
                        });
                    }
                });

                try {
                    const response = await fetch(`/Emparelhamento/SalvarEmparelhamentos?competicaoId=${@ViewBag.CompeticaoId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(emparelhamentos),
                    });

                    const result = await response.json();

                    if (response.status === 207) {
                        alert(`Alguns emparelhamentos falharam: ${JSON.stringify(result.falhas)}`);
                    } else if (response.ok) {
                        alert(result.mensagem);
                    } else {
                        throw new Error(result.mensagem || 'Erro ao salvar emparelhamentos');
                    }
                } catch (error) {
                    alert(error.message);
                }
            });

            // Redirect to menu
            menuButton.addEventListener('click', function () {
                window.location.href = `/Menu?competicaoId=${@ViewBag.CompeticaoId}`;
            });

            if (!@ViewBag.CompeticaoId) {
                alert('Nenhuma competição encontrada. Não é possível realizar emparelhamentos.');
                window.location.href = '/ListadeJogadores';
            }
        });
    </script>
</body>
</html>
