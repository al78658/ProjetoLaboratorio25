// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoLaboratorio25.Data;

#nullable disable

namespace ProjetoLaboratorio25.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250610222011_TornarOrganizadorOpcional")]
    partial class TornarOrganizadorOpcional
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Jogador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clube")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompeticaoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompeticaoId");

                    b.ToTable("Jogadores");
                });

            modelBuilder.Entity("ProjetoLaboratorio25.Models.Competicao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NumEquipas")
                        .HasColumnType("int");

                    b.Property<int>("NumJogadores")
                        .HasColumnType("int");

                    b.Property<int?>("OrganizadorId")
                        .HasColumnType("int");

                    b.Property<int>("PontosEmpate")
                        .HasColumnType("int");

                    b.Property<int>("PontosVitoria")
                        .HasColumnType("int");

                    b.Property<string>("TipoCompeticao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizadorId");

                    b.ToTable("Competicoes");
                });

            modelBuilder.Entity("ProjetoLaboratorio25.Models.ConfiguracaoFase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompeticaoId")
                        .HasColumnType("int");

                    b.Property<string>("CriteriosDesempate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FaseNumero")
                        .HasColumnType("int");

                    b.Property<string>("Formato")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumJogosPorFase")
                        .HasColumnType("int");

                    b.Property<int>("PontosDerrota")
                        .HasColumnType("int");

                    b.Property<int>("PontosDesclassificacao")
                        .HasColumnType("int");

                    b.Property<int>("PontosEmpate")
                        .HasColumnType("int");

                    b.Property<int>("PontosExtra")
                        .HasColumnType("int");

                    b.Property<int>("PontosFaltaComparencia")
                        .HasColumnType("int");

                    b.Property<int>("PontosVitoria")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompeticaoId");

                    b.ToTable("ConfiguracoesFase");
                });

            modelBuilder.Entity("ProjetoLaboratorio25.Models.EmparelhamentoFinal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clube1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clube2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompeticaoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataJogo")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("HoraJogo")
                        .HasColumnType("time");

                    b.Property<bool>("JogoRealizado")
                        .HasColumnType("bit");

                    b.Property<string>("Motivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PontuacaoClube1")
                        .HasColumnType("int");

                    b.Property<int?>("PontuacaoClube2")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompeticaoId");

                    b.ToTable("EmparelhamentosFinal");
                });

            modelBuilder.Entity("ProjetoLaboratorio25.Models.Notificacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clube1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Clube2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ClubeVitorioso")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DataNotificacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Motivo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Pontuacao1")
                        .HasColumnType("int");

                    b.Property<int>("Pontuacao2")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Notificacoes");
                });

            modelBuilder.Entity("ProjetoLaboratorio25.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("ProjetoLaboratorio25.Models.Utilizador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UtilizadorNome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Utilizadores");
                });

            modelBuilder.Entity("Jogador", b =>
                {
                    b.HasOne("ProjetoLaboratorio25.Models.Competicao", "Competicao")
                        .WithMany("Jogadores")
                        .HasForeignKey("CompeticaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competicao");
                });

            modelBuilder.Entity("ProjetoLaboratorio25.Models.Competicao", b =>
                {
                    b.HasOne("ProjetoLaboratorio25.Models.Utilizador", "Organizador")
                        .WithMany()
                        .HasForeignKey("OrganizadorId");

                    b.Navigation("Organizador");
                });

            modelBuilder.Entity("ProjetoLaboratorio25.Models.ConfiguracaoFase", b =>
                {
                    b.HasOne("ProjetoLaboratorio25.Models.Competicao", "Competicao")
                        .WithMany("ConfiguracoesFase")
                        .HasForeignKey("CompeticaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competicao");
                });

            modelBuilder.Entity("ProjetoLaboratorio25.Models.EmparelhamentoFinal", b =>
                {
                    b.HasOne("ProjetoLaboratorio25.Models.Competicao", "Competicao")
                        .WithMany("EmparelhamentosFinal")
                        .HasForeignKey("CompeticaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competicao");
                });

            modelBuilder.Entity("ProjetoLaboratorio25.Models.Competicao", b =>
                {
                    b.Navigation("ConfiguracoesFase");

                    b.Navigation("EmparelhamentosFinal");

                    b.Navigation("Jogadores");
                });
#pragma warning restore 612, 618
        }
    }
}
